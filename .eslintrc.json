{
  "root": true,
  "env": {
    "browser": true,
    "es6": true,
    "node": true
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "ecmaVersion": 2024,
    "ecmaFeatures": {
      "jsx": true,
      "arrowFunctions": true
    },
    "sourceType": "module"
  },
  "extends": [
    "next",
    "next/core-web-vitals",
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:jsdoc/recommended",
    "plugin:tailwindcss/recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier"
  ],
  "plugins": ["react", "jsdoc", "tailwindcss", "@typescript-eslint"],
  "rules": {
    // Disallow the use of variables that are defined but never used
    "no-unused-vars": "warn",
    // Prefer using === and !== over == and !=
    "eqeqeq": ["warn", "always"],
    // Prefer using const and let over var
    "no-var": "error",

    // Prefer using arrow functions for callbacks
    "prefer-arrow-callback": ["warn", { "allowNamedFunctions": false }],
    // Prefer using function expressions instead of function declarations
    "func-style": ["warn", "expression", { "allowArrowFunctions": true }],

    // React specific rules
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "off",
    "react/no-array-index-key": "error",
    "react/self-closing-comp": "warn",
    "react/no-unescaped-entities": "error",
    "react/jsx-no-target-blank": "error",
    "react/jsx-no-useless-fragment": ["warn", { "allowExpressions": true }],
    "react/sort-comp": "error",

    // React hooks specific rules
    "react-hooks/exhaustive-deps": "warn",
    "react-hooks/rules-of-hooks": "error",

    // Next.js specific rules
    "@next/no-img-element": "off",

    // TypeScript specific rules
    "@typescript-eslint/explicit-function-return-type": "warn",
    "@typescript-eslint/consistent-type-imports": "error",
    "@typescript-eslint/consistent-type-exports": "error",
    "@typescript-eslint/consistent-type-definitions": ["error", "type"],

    // Imports specific rules
    "sort-imports": [
      "error",
      {
        "ignoreCase": true,
        "ignoreDeclarationSort": true,
        "ignoreMemberSort": false
      }
    ],
    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", "internal"],
        "pathGroups": [
          {
            "pattern": "react",
            "group": "external",
            "position": "before"
          }
        ],
        "newlines-between": "always"
      }
    ],

    // JSDoc specific rules for Open Source projects
    "jsdoc/require-jsdoc": [
      "error",
      {
        "require": {
          "ArrowFunctionExpression": true,
          "ClassDeclaration": true,
          "FunctionDeclaration": true,
          "FunctionExpression": true,
          "MethodDefinition": true
        }
      }
    ],
    "jsdoc/require-param": "error",
    "jsdoc/require-param-type": "error",
    "jsdoc/require-returns": "error",
    "jsdoc/require-returns-type": "error",
    "jsdoc/require-property": "error",
    "jsdoc/require-property-description": "error",
    "jsdoc/require-property-type": "error"
  }
}